#!/bin/bash

echo "üöÄ Iniciando Arquitetura de Microsservi√ßos - DIO Challenge"
echo "=================================================="

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker primeiro."
    exit 1
fi

# Iniciar RabbitMQ
echo "üì° Iniciando RabbitMQ..."
docker-compose up -d

# Aguardar RabbitMQ estar pronto
echo "‚è≥ Aguardando RabbitMQ inicializar..."
sleep 10

# Verificar se RabbitMQ est√° rodando
if curl -f http://localhost:15672 > /dev/null 2>&1; then
    echo "‚úÖ RabbitMQ est√° rodando em http://localhost:15672"
else
    echo "‚ùå Erro ao iniciar RabbitMQ"
    exit 1
fi

# Compilar e iniciar Warehouse Service
echo "üè≠ Iniciando Warehouse Service..."
cd warehouse-service
mvn clean compile > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ Warehouse Service compilado com sucesso"
    mvn spring-boot:run > ../logs/warehouse.log 2>&1 &
    WAREHOUSE_PID=$!
    echo "üè≠ Warehouse Service iniciado (PID: $WAREHOUSE_PID)"
else
    echo "‚ùå Erro ao compilar Warehouse Service"
    exit 1
fi

cd ..

# Aguardar Warehouse Service estar pronto
echo "‚è≥ Aguardando Warehouse Service inicializar..."
sleep 15

# Verificar se Warehouse est√° rodando
if curl -f http://localhost:8081/api/products > /dev/null 2>&1; then
    echo "‚úÖ Warehouse Service est√° rodando em http://localhost:8081"
else
    echo "‚ùå Erro ao iniciar Warehouse Service"
    kill $WAREHOUSE_PID 2>/dev/null
    exit 1
fi

# Compilar e iniciar Storefront Service
echo "üè™ Iniciando Storefront Service..."
cd storefront-service
mvn clean compile > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ Storefront Service compilado com sucesso"
    mvn spring-boot:run > ../logs/storefront.log 2>&1 &
    STOREFRONT_PID=$!
    echo "üè™ Storefront Service iniciado (PID: $STOREFRONT_PID)"
else
    echo "‚ùå Erro ao compilar Storefront Service"
    kill $WAREHOUSE_PID 2>/dev/null
    exit 1
fi

cd ..

# Aguardar Storefront Service estar pronto
echo "‚è≥ Aguardando Storefront Service inicializar..."
sleep 15

# Verificar se Storefront est√° rodando
if curl -f http://localhost:8080/api/storefront/products > /dev/null 2>&1; then
    echo "‚úÖ Storefront Service est√° rodando em http://localhost:8080"
else
    echo "‚ùå Erro ao iniciar Storefront Service"
    kill $WAREHOUSE_PID $STOREFRONT_PID 2>/dev/null
    exit 1
fi

# Criar diret√≥rio de logs se n√£o existir
mkdir -p logs

# Salvar PIDs para facilitar o stop
echo $WAREHOUSE_PID > logs/warehouse.pid
echo $STOREFRONT_PID > logs/storefront.pid

echo ""
echo "üéâ Todos os servi√ßos est√£o rodando com sucesso!"
echo "=================================================="
echo "üìä URLs dos Servi√ßos:"
echo "   ‚Ä¢ Warehouse API: http://localhost:8081/api/products"
echo "   ‚Ä¢ Storefront API: http://localhost:8080/api/orders"
echo "   ‚Ä¢ RabbitMQ Management: http://localhost:15672 (guest/guest)"
echo "   ‚Ä¢ H2 Console Warehouse: http://localhost:8081/h2-console"
echo "   ‚Ä¢ H2 Console Storefront: http://localhost:8080/h2-console"
echo ""
echo "üìù Logs dos Servi√ßos:"
echo "   ‚Ä¢ Warehouse: tail -f logs/warehouse.log"
echo "   ‚Ä¢ Storefront: tail -f logs/storefront.log"
echo ""
echo "üõë Para parar os servi√ßos: ./scripts/stop-services.sh"
echo "=================================================="
